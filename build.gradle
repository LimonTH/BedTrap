plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
}

loom {
    accessWidenerPath = file("src/main/resources/bed-trap.accesswidener")
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

base {
    version = project.mod_version
    group = project.maven_group
    archivesBaseName(project.archives_base_name)
}

repositories {
    flatDir {
        name "libs"
        dirs "libs"
    }
    maven {
        name "meteor-maven-snapshots"
        url "https://maven.meteordev.org/snapshots"
    }
    maven {
        name "jitpack-io"
        url "https://jitpack.io"
    }
}

dependencies {
    // Libraries

    implementation 'com.github.oshi:oshi-core-java11:6.6.5'
    implementation 'com.google.j2objc:j2objc-annotations:3.0.0'
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    //Discord
    modImplementation "com.github.RedCokeDevelopment:discord-game-sdk4j:${project.discord_rpc}"
    include "com.github.RedCokeDevelopment:discord-game-sdk4j:${project.discord_rpc}"
    // Meteor
    modImplementation ":gonbleware-meteor-fork-${project.gonbleware_fork_version}"
    modImplementation "meteordevelopment:baritone:${project.minecraft_version}-SNAPSHOT"
    // Version checker
}

processResources {
    def propertyMap = [
            "version"          : project.mod_version,
            "minecraft_version": project.minecraft_version,
            "loader_version"   : project.loader_version
    ]
    inputs.properties(propertyMap)
    filesMatching("fabric.mod.json") {
        expand(propertyMap)
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding("UTF-8")
}